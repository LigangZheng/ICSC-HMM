% ================================
% function ChmmGaussTest()
% Generate Data for Gaussian HMM test
for i1 = 1:2
    X1 = mvnrnd([0,0], [0.5, 0.2; 0.2, 0.3]/5, 20);
    X2 = mvnrnd([0,2], [0.3, -0.2; -0.2, 0.5]/5, 30);
    X3 = mvnrnd([0,4], [0.5, 0; 0, 0.3]/5, 40);
    X = [X1; X2; X3];
    Data{i1} = X;
end

Xall = cell2mat(Data');
scatter(Xall(:,1), Xall(:,2), '.'); hold on

for i=1:length(Data)
plot(Xall)
end

%% Set feature states
Q = 3;  % state num
p = 2;  % feature dim
p_start0 = [1 0 0];
A0 = [0.8 0.2 0; 0 0.8 0.2; 0 0 1];

[p_start, A, phi, loglik] = ChmmGauss(Data, Q);
% [p_start, A, phi, loglik] = ChmmGauss(Data, Q, 'p_start0', p_start0, 'A0', A0, 'phi0', phi0, 'cov_type', 'diag', 'cov_thresh', 1e-1);

% Calculate p(X) & vertibi decode
logp_xn_given_zn = Gauss_logp_xn_given_zn(Data{1}, phi);
[~,~, loglik] = LogForwardBackward(logp_xn_given_zn, p_start, A);
path = LogViterbiDecode(logp_xn_given_zn, p_start, A);

p_start0
A0
p_start
A
phi
loglik
path'

% plot gaussians
error_ellipse(reshape(phi.Sigma(:,:,1),p,p), phi.mu(:,1)', 'style', 'r'); hold on
error_ellipse(reshape(phi.Sigma(:,:,2),p,p), phi.mu(:,2)', 'style', 'g'); hold on
error_ellipse(reshape(phi.Sigma(:,:,3),p,p), phi.mu(:,3)', 'style', 'k'); hold on
% end